## Play to install required pacman and AUR packages
---
- name: Install reflector to get fastest pacman mirrors
  community.general.pacman:
    name: reflector
    state: present

## Running reflector takes time and is onl required once to update pacman mirrorlist
- name: Check if reflector has already run
  ansible.builtin.stat:
    path: /var/log/ansibleMarkers/reflectorRun.success
  register: reflector_ran

- name: Update mirrorlist with reflector and create marker file if not already run
  ansible.builtin.shell: |
    reflector --latest 20 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
  args:
    executable: /bin/bash
  when: not reflector_ran.stat.exists

- name: Create dir to place marker file
  ansible.builtin.file:
    path: /var/log/ansibleMarkers
    state: directory
    recurse: yes
    mode: '0700'
  when: not reflector_ran.stat.exists
  
- name: Place marker file if all above succeeds
  ansible.builtin.file:
    path: /var/log/ansibleMarkers/reflectorRun.success
    state: touch
    mode: '0600'
  when: not reflector_ran.stat.exists

- name: Update package list
  community.general.pacman:
    update_cache: true
    upgrade: true
  changed_when: false

- name: Download and install required packages
  community.general.pacman:
    name: "{{ item }}"
    state: present
  loop: "{{ my_packages }}"

- name: Check to see if yay is already installed 
  ansible.builtin.shell: | 
    which yay
  args: 
    executable: /bin/bash
  register: yay_installed
  changed_when: false
  ignore_errors: true

- name: Clone yay repo if above is false
  ansible.builtin.git:
    repo: 'https://aur.archlinux.org/yay.git'
    dest: '/home/{{ ansible_user }}/yay'
    clone: yes
    update: true
  become_user: "{{ ansible_user }}"
  when: yay_installed.rc != 0 

- name: Build and install yay
  command:
    chdir: "/home/{{ ansible_user }}/yay"
    cmd: "makepkg -sfi --noconfirm"
    creates: /usr/bin/yay
  become_user: "{{ ansible_user }}"
  when: yay_installed.rc != 0

- name: Cleanup yay directory
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/yay
    state: absent

## Arch recommends running AUR commands as non root user

- name: Create db for development packages
  ansible.builtin.shell: |
    yay -Y --gendb -y && yay -Y --devel --save
  changed_when: false
  become_user: "{{ ansible_user }}"
  ignore_errors: true
  when: yay_installed.rc != 0

- name: Upgrade and install yay packages
  ansible.builtin.shell: |
    yay -Syu wlogout hyprpolkitagent btrfs-assistant python-pywalfox --noconfirm
  changed_when: false
  become_user: "{{ ansible_user }}"
  ignore_errors: true
  
#- name: Install yay packages
#  ansible.builtin.shell: |
#    yay -S {{ item }} --noconfirm
#  loop: "{{ my_aur_packages }}"
#  become_user: "{{ ansible_user }}"
#  ignore_errors: true

- name: Enabled installed services
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
  loop:
    - bluetooth
    - libvirtd
    - cronie
    - ufw
    - docker
